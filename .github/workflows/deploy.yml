name: Deploy Abraham University ReactJS Website

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint:ci --if-present
      
    - name: Run tests
      run: npm test --if-present
      
    - name: Build application
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: matrix.node-version == '22.x'
      with:
        name: build-files
        path: dist/
        retention-days: 30

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for production
      run: npm run build
      env:
        NODE_ENV: production
        
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: dist/
        
    # Deploy to server via SSH
    - name: Deploy to AlmaLinux Server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          # Navigate to application directory
          cd /var/www/abraham-university
          
          # Pull latest changes
          git pull origin main
          
          # Install/update dependencies
          npm ci --production
          
          # Build the application
          npm run build
          
          # Restart the application service
          sudo systemctl restart abraham-university
          
          # Reload Apache configuration
          sudo systemctl reload httpd
          
          echo "Deployment completed successfully"
          
    # Alternative: Deploy via rsync (uncomment if preferred)
    # - name: Deploy via rsync
    #   uses: burnett01/rsync-deployments@6.0.0
    #   with:
    #     switches: -avzr --delete
    #     path: dist/
    #     remote_path: /var/www/abraham-university/dist/
    #     remote_host: ${{ secrets.SERVER_HOST }}
    #     remote_user: ${{ secrets.SERVER_USER }}
    #     remote_key: ${{ secrets.SERVER_SSH_KEY }}

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      
    - name: Check for vulnerabilities
      run: npm audit --audit-level=high --production
      continue-on-error: true

  lighthouse:
    needs: deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        urls: |
          ${{ secrets.PRODUCTION_URL || 'https://abrahamuniversity.us' }}
        configPath: './.lighthouserc.json'
        uploadArtifacts: true
        temporaryPublicStorage: true